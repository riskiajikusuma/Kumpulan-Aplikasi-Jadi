<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASsSLo0rDjKpKw4yqSsOMqkrD
        jKpKw4yqSsOMqkrDi6IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAErDi8hKw4v/SsOL/0rD
        i/9Kw4v/SsOL/0rDi/9Kw4rHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABLxIo9SsOL9EGw
        ef8wjVf/LolT/0Cud/9Kw4v0SMSMPAAAAAAAAAAAAAAAAAAAAAAAAAAAe29UVXpuVP96blT/em5U/3R5
        W/82hF//DZHU/w2P0P84hWD/dHlc/3puVP96blT/em5U/3tvVFUAAAAAAAAAAHtvVFXQuZn/+967//ve
        u//73rv/gJSa/yxfgf8sX4H/gJSa//veu//73rv/+967/9C5mf97b1RVAAAAAAAAAAB7b1RV0LmZ//ve
        u//73rv/7NKx/0lIR/9CQkL/QkJC/0lIR//s0rH/+967//veu//QuZn/e29UVQAAAAAAAAAAe29UVdC5
        mf/73rv/+967/3WVp/9CQkL/QkJC/0JCQv9CQkL/d5eo//veu//73rv/0LmZ/3tvVFUAAAAAAAAAAHtv
        VFXQuZn/+967//veu/+CeGz/QkJC/0JCQv9CQkL/QkJC/4R5bf/73rv/+967/9C5mf97b1RVAAAAAAAA
        AAB7b1RV0LmZ//veu//73rv/ppaD/0JCQv9CQkL/QkJC/0JCQv+mloP/+967//veu//QuZn/e29UVQAA
        AAAAAAAAe29UVdC5mf/73rv/+967//TYt/9tZl7/QkJC/0JCQv+JfnH/9dm3//veu//73rv/0LmZ/3tv
        VFUAAAAAAAAAAHtvVFXQuZn/+967//veu//73rv/99u4/9W+ov/FsZj/+967//veu//73rv/+967/9C5
        mf97b1RVAAAAAAAAAAB7bVI4em5Uq3puVKt6blSrem5Uq3puVKt6blSrem5Uq3puVKt6blSrem5Uq3pu
        VKt6blSre21SOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA8A8AAPAPAAD4HwAAwAMAAMADAADAAwAAwAMAAMAD
        AADAAwAAwAMAAMADAADAAwAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAEjCjUNLw4tES8OLREvDi0RLw4tES8OLREvDi0RLw4tES8OLREvDi0RLw4tES8OLREvD
        i0RLw4tES8OLREnBi0IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAASsOL50rDi/9Kw4v/SsOL/0rDi/9Kw4v/SsOL/0rDi/9Kw4v/SsOL/0rD
        i/9Kw4v/SsOL/0rDi/9Kw4v/SsOL5gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABJw4u/SsOL/0rDi/9Kw4v/SsOL/0rDi/9Kw4v/SsOL/0rD
        i/9Kw4v/SsOL/0rDi/9Kw4v/SsOL/0rDi/9KxIu9AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEnCi2VKw4v/SsOL/0rDi/9Kw4v/SsOL/0rD
        i/9Kw4v/SsOL/0rDi/9Kw4v/SsOL/0rDi/9Kw4v/SsOL/0nCi2UAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASbaSB0rDi9BKw4v/SsOL/0rD
        i/9Kw4v/RbiA/z+tdv8/rXb/RbiA/0rDi/9Kw4v/SsOL/0rDi/9Kw4vMQL+ACAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAS8OPIkrD
        i9dKw4v/RbiA/ymASf8eaTP/Hmkz/x5pM/8eaTP/KH5H/0a6g/9Kw4v/S8OM1EbBjR0AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB6blSrem5U/3puVP96blT/em5U/3pu
        VP96blT/d3JX/1+bcP8ne0X/IXE8/xyRm/8IleT/CJTh/xyOk/8gbjj/LIVP/2Cdcv93c1f/em5U/3pu
        VP96blT/em5U/3puVP96blT/em5UqwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHpuVKt6blT/em5U/3pu
        VP96blT/em5U/3puVP96blT/em5U/29zVP8ni7X/AJj//wCY//8AmP//AJj//yiKsv9ydFX/em5U/3pu
        VP96blT/em5U/3puVP96blT/em5U/3puVP96blSrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAem5Uq6WT
        dv/73rv/+967//veu//73rv/+967//veu//73rv/+967/1CYxf8Sgc3/EoHN/xKBzf8Sgc3/UJjF//ve
        u//73rv/+967//veu//73rv/+967//veu//73rv/pZN2/3puVKsAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAB6blSrpZN2//veu//73rv/+967//veu//73rv/+967//veu//Nt53/QkNE/0JCQv9CQkL/QkJC/0JC
        Qv9CQ0T/zbed//veu//73rv/+967//veu//73rv/+967//veu/+lk3b/em5UqwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAHpuVKulk3b/+967//veu//73rv/+967//veu//73rv/+dy6/1pXUv9CQkL/QkJC/0JC
        Qv9CQkL/QkJC/0JCQv9bV1P/+dy6//veu//73rv/+967//veu//73rv/+967/6WTdv96blSrAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAem5Uq6WTdv/73rv/+967//veu//73rv/+967//veu//BrZX/QkJC/0JC
        Qv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv/Crpb/+967//veu//73rv/+967//veu//73rv/pZN2/3pu
        VKsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB6blSrpZN2//veu//73rv/+967//veu//73rv/2tXG/z1v
        kP9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/z5vkf/b1sX/+967//veu//73rv/+967//ve
        u/+lk3b/em5UqwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHpuVKulk3b/+967//veu//73rv/+967//ve
        u//Py73/QVNf/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QVNf/9DMvP/73rv/+967//ve
        u//73rv/+967/6WTdv96blSrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAem5Uq6WTdv/73rv/+967//ve
        u//73rv/+967/72qk/9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/vquT//ve
        u//73rv/+967//veu//73rv/pZN2/3puVKsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB6blSrpZN2//ve
        u//73rv/+967//veu//73rv/w6+X/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JC
        Qv/Mtpz/+967//veu//73rv/+967//veu/+lk3b/em5UqwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHpu
        VKulk3b/+967//veu//73rv/+967//veu//hyKr/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkJC/0JC
        Qv9CQkL/Q0ND/+jOr//73rv/+967//veu//73rv/+967/6WTdv96blSrAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAem5Uq6WTdv/73rv/+967//veu//73rv/+967//veu/9nYVr/QkJC/0JCQv9CQkL/QkJC/0JC
        Qv9CQkL/QkJC/0JCQv9sZV7/+967//veu//73rv/+967//veu//73rv/pZN2/3puVKsAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAB6blSrpZN2//veu//73rv/+967//veu//73rv/+967/9K7oP9GRUT/QkJC/0JC
        Qv9CQkL/QkJC/0JCQv9CQkL/T01K/9vDpv/73rv/+967//veu//73rv/+967//veu/+lk3b/em5UqwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAHpuVKulk3b/+967//veu//73rv/+967//veu//73rv/+967/8Sw
        l/9PTUr/QkJC/0JCQv9CQkL/Q0ND/52Pfv/q0LD/+967//veu//73rv/+967//veu//73rv/+967/6WT
        dv96blSrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAem5Uq6WTdv/73rv/+967//veu//73rv/+967//ve
        u//73rv/+967/+7Ts/+qmYb/hXpt/3NrYv+Th3f/+967//veu//73rv/+967//veu//73rv/+967//ve
        u//73rv/pZN2/3puVKsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB6blSrpZN2//veu//73rv/+967//ve
        u//73rv/+967//veu//73rv/+967//veu//73rv/+967//veu//73rv/+967//veu//73rv/+967//ve
        u//73rv/+967//veu/+lk3b/em5UqwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHpuVKt6blT/em5U/3pu
        VP96blT/em5U/3puVP96blT/em5U/3puVP96blT/em5U/3puVP96blT/em5U/3puVP96blT/em5U/3pu
        VP96blT/em5U/3puVP96blT/em5U/3puVP96blSrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAe21SOHtv
        VFV7b1RVe29UVXtvVFV7b1RVe29UVXtvVFV7b1RVe29UVXtvVFV7b1RVe29UVXtvVFV7b1RVe29UVXtv
        VFV7b1RVe29UVXtvVFV7b1RVe29UVXtvVFV7b1RVe29UVXttUjgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///////////////////////////wAA//8AAP//gAH//4AB///A
        A//gAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AA
        AAfgAAAH4AAAB///////////////////////////
</value>
  </data>
</root>